const { InlineKeyboard, Keyboard } = require('grammy')

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã: –û—Å–Ω–æ–≤–Ω—ã–µ
const menuKeyboard = () => {
    return new InlineKeyboard().text('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'menu')
}

const backMenuKeyboard = () => {
    return new InlineKeyboard().text('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back-menu')
}

//–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã: –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
const choiseMoodKeyboard = () => {
    return new Keyboard()
        .text('üò£')
        .text('üôÅ')
        .text('üòê')
        .row()
        .text('üôÇ')
        .text('üòÉ')
        .oneTime()
        .resized()
}

const activitiesRestKeyboard = () => {
    return new Keyboard()
        .text('–û—Ç–¥—ã—Ö')
        .row()
        .text('–°–æ–Ω')
        .text('–ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏')
        .text('–ü—Ä–æ–≥—É–ª–∫–∞')
        .row()
        .text('–ó–¥–æ—Ä–æ–≤—å–µ')
        .text('–î—É—à')
        .row()
        .text('–ì–æ—Ç–æ–≤–æ ‚û°Ô∏è')
        .row()
        .text('–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä üóëÔ∏è')
        .resized()
}

const activitiesWorkKeyboard = () => {
    return new Keyboard()
        .text('–†–∞–±–æ—Ç–∞')
        .row()
        .text('–î–æ–º–∞—à–Ω–∏–µ –¥–µ–ª–∞')
        .text('–ü–æ–∫—É–ø–∫–∏')
        .row()
        .text('–û–±—É—á–µ–Ω–∏–µ')
        .text('–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ')
        .row()
        .text('–ì–æ—Ç–æ–≤–æ ‚û°Ô∏è')
        .row()
        .text('–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä üóëÔ∏è')
        .resized()
}

const activitiesSocietyKeyboard = () => {
    return new Keyboard()
        .text('–û–±—â–µ–Ω–∏–µ')
        .row()
        .text('–õ—é–±–æ–≤—å')
        .text('–î—Ä—É–∑—å—è')
        .row()
        .text('–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
        .text('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏')
        .row()
        .text('–ì–æ—Ç–æ–≤–æ ‚û°Ô∏è')
        .row()
        .text('–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä üóëÔ∏è')
        .resized()
}

//–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã: –≠–º–æ—Ü–∏–∏
const emotionLoveKeyboard = () => {
    return new Keyboard()
        .text('–ù–µ–∂–Ω–æ—Å—Ç—å')
        .row()
        .text('–ë–ª–∞–∂–µ–Ω—Å—Ç–≤–æ')
        .text('–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å')
        .row()
        .text('–í–ª—é–±–ª–µ–Ω–Ω–æ—Å—Ç—å')
        .text('–û—á–∞—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å')
        .row()
        .text('–ì–æ—Ç–æ–≤–æ ‚û°Ô∏è')
        .row()
        .text('–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä üóëÔ∏è')
        .resized()
}
const emotionHappyKeyboard = () => {
    return new Keyboard()
        .text('–†–∞–¥–æ—Å—Ç—å')
        .row()
        .text('–í–æ—Å—Ç–æ—Ä–≥')
        .text('–ù–∞–¥–µ–∂–¥–∞')
        .row()
        .text('–õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ')
        .text('–°—á–∞—Å—Ç—å–µ')
        .row()
        .text('–ì–æ—Ç–æ–≤–æ ‚û°Ô∏è')
        .row()
        .text('–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä üóëÔ∏è')
        .resized()
}
const emotionAngerKeyboard = () => {
    return new Keyboard()
        .text('–ì—Ä—É—Å—Ç—å')
        .row()
        .text('–¢—Ä–µ–≤–æ–≥–∞')
        .text('–ó–ª–æ—Å—Ç—å')
        .row()
        .text('–°—Ä—ã–≤')
        .text('–ù–µ–Ω–∞–≤–∏—Å—Ç—å')
        .text('–†–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ')
        .row()
        .text('–ì–æ—Ç–æ–≤–æ ‚û°Ô∏è')
        .row()
        .text('–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä üóëÔ∏è')
        .resized()
}

const choiceSaveKeyboard = () => {
    return new InlineKeyboard()
        .text('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ', 'confirm_save')
        .row()
        .text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'cancel_save')
}

//–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã: –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø–∏—Å–µ–π
function checkHistoryKeyboard(reports) {
    const keyboard = new InlineKeyboard()

    reports.forEach((report) => {
        const date = new Date(report.created_at)
        keyboard
            .text(`üìÖ ${date.toLocaleDateString()}`, `view_${report.id}`)
            .row()
    })

    keyboard.text('üîô –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é –∑–∞–ø–∏—Å–µ–π', 'back-to-records-menu')

    return keyboard
}

function viewReportKeyboard(reportId) {
    return new InlineKeyboard()
        .text('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', `confirm_delete_${reportId}`)
        .row()
        .text('üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É', 'back-to-history')
        .text('üè† –í –º–µ–Ω—é', 'back-menu')
}

function confirmDeleteKeyboard(reportId) {
    return new InlineKeyboard()
        .text('‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å', `delete_${reportId}`)
        .text('‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞', `view_${reportId}`)
}

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã: –ü–æ–º–æ—â—å
const listMenuCommandsKeyboard = () => {
    return new InlineKeyboard().text(
        '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥',
        'list-menu-commands',
    )
}

module.exports = {
    mainKeyboards: {
        backMenuKeyboard,
        menuKeyboard,
    },
    commandsKeyboards: {
        listMenuCommandsKeyboard,
    },
    createNoteKeyboards: {
        choiseMoodKeyboard,
        activitiesRestKeyboard,
        activitiesWorkKeyboard,
        activitiesSocietyKeyboard,

        emotionLoveKeyboard,
        emotionHappyKeyboard,
        emotionAngerKeyboard,

        choiceSaveKeyboard,
    },
    checkNoteKeyboard: {
        checkHistoryKeyboard,
        viewReportKeyboard,
        confirmDeleteKeyboard,
    },
}
